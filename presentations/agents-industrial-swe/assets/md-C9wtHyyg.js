import{b as i,o as a,w as r,g as e,B as t,v as u,x as c,C as s}from"./modules/vue-ObIUABEp.js";import{I as p}from"./slidev/default-DH7K3_5J.js";import{u as m,f as d}from"./slidev/context-CZf-rnHS.js";import"./index-BSJaTGoy.js";import"./modules/shiki-DzjnX2Wa.js";const y={__name:"slides.md__slidev_24",setup(g){const{$clicksContext:o,$frontmatter:n}=m();return o.setup(),(f,l)=>(a(),i(p,u(c(s(d)(s(n),23))),{default:r(()=>[...l[0]||(l[0]=[e("h1",null,"🚫 Avoid LLMs for Simple Tasks",-1),e("ul",null,[e("li",null,[t("❌ LLM calls are "),e("strong",null,"slow and costly")]),e("li",null,[t("✅ Use "),e("strong",null,"embeddings or simple ML"),t(" for lightweight tasks")])],-1),e("br",null,null,-1),e("h3",null,"Examples",-1),e("p",null,"🧾 Intent detection → e.g., “book flight” vs “check weather” vs “play music”",-1),e("p",null,"🗂 Classification → sentiment (positive/negative), spam detection, topic tagging",-1),e("p",null,"🔍 Semantic search → retrieving FAQs, docs, or code snippets by similarity",-1),e("p",null,"🪄 Deduplication / clustering → grouping similar customer queries or tickets",-1),e("p",null,"🛠 Entity matching → “NYC” ≈ “New York City” (product, location, or name normalization)",-1),e("p",null,"🎶 Recommendation → “users who liked this song/movie also liked …”",-1),e("p",null,"📝 Anomaly detection → flagging unusual text or events",-1)])]),_:1},16))}};export{y as default};
